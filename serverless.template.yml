org: ${param:org}
app: ${param:app}
service: ${param:service}

provider:
  name: aws
  runtime: nodejs20.x
  region: ${param:region}
  stage: ${param:stage}
  environment:
    USERS_TABLE: ${self:service}-${self:provider.stage}-users
    SQS_QUEUE_URL: !Ref UsersQueue
    SNS_TOPIC_ARN: !Ref UserSNSTopic
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
            - dynamodb:Query
          Resource: !GetAtt UsersTable.Arn
        - Effect: Allow
          Action:
            - lambda:InvokeFunction
          Resource:
            - arn:aws:lambda:${self:provider.region}:${param:accountId}:function:${self:service}-${self:provider.stage}-getUser
            - arn:aws:lambda:${self:provider.region}:${param:accountId}:function:${self:service}-${self:provider.stage}-createUser
        - Effect: Allow
          Action:
            - sqs:SendMessage
          Resource: !GetAtt UsersQueue.Arn
        - Effect: Allow
          Action:
            - sqs:ReceiveMessage
            - sqs:DeleteMessage
          Resource: !GetAtt UsersQueue.Arn
        - Effect: Allow
          Action:
            - sns:Publish
          Resource: !Ref UserSNSTopic

functions:
  getUser:
    handler: handlers/handlerGet.getUser
    events:
      - http:
          path: user
          method: get
          private: false

  createUser:
    handler: handlers/handlerPost.createUser
    events:
      - http:
          path: user
          method: post
          private: false

  sendEmail:
    handler: handlers/handlerSendEmail.sendEmail
    events:
      - sqs:
          arn: !GetAtt UsersQueue.Arn

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
    
    UsersQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-queue
        RedrivePolicy:
          deadLetterTargetArn: !GetAtt UsersDLQ.Arn
          maxReceiveCount: 3
    
    UsersDLQ:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:service}-${self:provider.stage}-dlq
    
    UserSNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        TopicName: ${self:service}-${self:provider.stage}-notifications